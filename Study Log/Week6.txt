25.02.24
C# Basic
#1 Lecture
Bit 연산    //  Unity Layer Mask에 사용한다, 물리 엔진의 그룹에도 사용한다.
--> 카메라에 비트마스크를 적용하면 제외되는 레이어를 빼면 어딘가에 걸릴것이니
연산속도가 획기적 
// 그래서 단어 사용도 Masking // 암막 커튼처럼 가려서 찾는다
bit shift 연산 무슨짓을 해도 이진 곱셈 연산이 단 1번만에 끝난다. 
<<  :   L-Shift (X2)
>>  :   R-Shift (/2)
&   :   Bit And
|   :   Bit Or
~   :   Not
^   :   Exclusive OR

****    번외   ****
GameObject.Tag == Hashing 된 숫자값을 통해 비교연산
==> 문자열 비교가 아니다.

변수 다양하게 넣어보기
0x  :   16진수
0b  :   2진수


#2 Lecture
BitArray32 (uint) Layer 간단하게 만들어보기
비트마스킹 Continue;
On/Off 함수 // 특정 위치의 비트에 할당하거나 해제하는 함수
void On(int param)
{
    if (param > 0 && param <= 32)
    {
        data = data | (uint)(1 << (param - 1));
    }
}

void Off(int param)
{
    data = data & ~(uint)(1 << (param - 1));
}

*/*/**오른손 법칙**/*/* -- > 찾아보기

bool Check(int other)
{
    return (data & other) > 0 ? true : false;
}

오전수업 요약 : 비트연산자의 강력함을 느껴봐라 with KaKao/Nexon

Extra :: 삼각 함수에 대한 기본지식 = 단위 원에 내접하는 직각 삼각형과 각 세타
다큐프라임 :: 문명과 수학

#3 Lecture
2D Renderer Engine
2D Engine Plus
렌더링 우선순위 제작 
기존에는 반복문을 통한 레이어 마스킹 레이어 갯수만큼 반복횟수 증가
-> 소팅 또는 레이어별 오브젝트 리스트 추가하기

선택 정렬, 버블 정렬

충돌 처리 관련 해결책
// 내가 생각한 해결책 --> 이동해보고 충돌하면 롤백 리턴

강사님이 제시한 해결책 --> 미리 체크하고 충돌안했으면 실행
비슷하지만 다른 방법

#4 Lecture
File IO
Core/FileManager.cs 
Data/level01.map
BubbleSort

예외처리

25.02.25
C# Basic
#1 Lecture


25.02.26
Unity6 Basic
#1 Lecture


25.02.27
Unity6 Basic
#1 Lecture


25.02.28
Unity6 Basic
#1 Lecture
