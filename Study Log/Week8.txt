25.03.10
C# Basic
#1 Lecture
강사님의 말
실시간 렌더링은 사기다 ==> 그럴듯 하게 한다
물리적 공식을 단순화 하는게 최고다

물리기반 렌더링 :: 머테리얼을 생각하면 된다
수학적 공식을 통해 재질, 부드러움정도, 기본색상 등을 연산해서 결과를 낸다.
BRDF 공부하기 == 셰이더

Tween
물체의 벡터 변환을 처리(이동, 회전, 스케일)
선형 보간과 관련됨

#2 Lecture
파일 로드 할때(실행 중일 때)는 항상 압축을 모두 풀어서 사용한다
GameObject::Road(string filename){};

Player -> PlayerController

Change to Component Base Engine 



25.03.11
C# Basic
#1 Lecture
델리게이트 복습
==> 대리자 패턴
public delegate int Command(int a, int b)
사용하는 이유는 전역함수를 통해 클래스간 결합도를 낮추고 싶어서 사용한다.
--> 전역 함수는 객체지향에 없기 때문에 전역 클래스를 통해 공유하는 대리자 패턴

주로 네트워크, 이벤트 처리 할 때 사용

25.03.12
Unity6 Deep
#오전 강의
애니메이션 컨트롤러 수정하기
캐릭터 상 하체 분리해서 제어하기
물리 엔진 공부하기
레이캐스팅 == 레이 트레이스

오후에는 탈출맵 만들기

25.03.13
Unity6 Deep
#1 Lecture
RayCast _ Single / Multi
파란색으로 일단 그리고
빨간색으로 덮어씌움

트레일 렌더러 <- 이런거 있다

Box CAST
영역 베이스 감지

#2 Lecture
AI 설계하기
상태
    대기하는중
    공격하는중
    피격당하는중
    도주하는 중
    쫒아가는중
    
행동
    가만히 있는다
    플레이어를 쫒아간다.
    죽는다
    스폰한다
    제자리로 돌아간다
    순찰한다
    공격한다
    도주한다 

ZombieManager / HPController로 분리 
HPController --> HitEffecter로 바꾸기


25.03.14
Unity6 Deep
#1 Lecture


