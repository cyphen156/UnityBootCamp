25.02.03

C# Basic
#1 Lecture
유니티의 Layer 시스템은 Bit연산을 통해 최적화 한다
->> 렌더링시 비트마스킹을 통해 제어할 수 있다?
깃 사용시
에러나면 푸시하지마라
커밋은 기능단위로 개발완료되었을때 해라

#2 Lecture함
별찍기
1차원 배열
2차원 배열
변수의 스코프
함수 기초
return이란...?
함수의 오버로딩 // 함수 맹글링 
=> 컴파일러의 오버로딩된 수 이름 명명 규칙
Template 함수

25.02.04
C# Basic

#1 Lecture
Random Array Element Print
처음 한것
-> 배열 안에서 랜덤하게 뽑되 중복을 체크하면서 실행
--> 최악의 경우 무한반복으로 프로그램이 끝나지 않음

강사님의 Idea
-> 주머니 섞기
--> 배열 내부에서 요소들 끼리 섞는 방법
---> 최악의 경우에도 52번의 반복

추가 아이디어
=> 눈속임 / 어차피 뽑는 횟수는 8번
==> 전체를 다 섞을 필요가 없음 나머지는 확인불가

피셔 & 요테의 셔플 방식
=> 인덱스를 활용
==> 등장한 인덱스 요소는 맨 마지막으로 이동하며 요소들을 교체
==> 남은 인덱스도 -1만큼만 뽑아낼 수 있도록 제외하는 역할
===>  N/2 만큼만 반복

난수 생성 -> 선형 합동법 공부해봐 한번

#2 Lecture
C#의 메모리 영역
스택과 힙
-> 동적할당이더라도 무조건 힙에 올라가는것은 아니다.
--> struct 동적 할당은 스택에 올라감
참조는 힙에 값 타입은 스택에
in / Out 키워드
in은 참조형을 호출자 안에서 건드리면 에러발생
out은 참조형을 호출자 안에서 수정하지 않으면 에러발생

25.02.05
Unity6 Basic

#1 Lecture
Terrain 
#include Terrain Sample Asset Pack-Unity Techknolodgies
setting altitude 
SetHeight
Texture
Normal Map = 입체 상의 x y z를 탄젠트 함수로 변환해 rgb좌표로 만든 그림
-> 평면 상에 높이 값이 있는 것 처럼 빛 반사 처리를 바꿔주는 역할

Diffuse : 물체에 깊이감과 입체감을 부여, 표면에 색을 부여

Normal Scale : 노말 맵에서 설정할 수 있는 스케일
0 : 조명 계산에 영향 x
1 : 100%
2 : 더욱 뚜렷하게
-1 : 반대로 처리 --> 음영처리?

mask Map : 고해상도 텍스쳐 설정
메탈릭, 평활도, 타일링 등의 설정 처리
평활도 :: 텍스쳐의 질감을 표현하기 위한 것

스크립트를 통해 오브젝트에 스크립트를 연결하는 작업
Ray == 가상의 레이저 선
시작 지점과 방향을 가지고 있는 벡터
// 일반적인 Ray 만드는 방법
Vector3 origin;
Vector3 vec_dir = Vector.forward
Ray ray = new Ray(origin, vec_dir);
// RayCast      광선을 떤지자

#2 Lecture
Particle System
Emission - burst : particle to Quick Burst
probability : 생성 가능성 체크 ...-> 확률?
size over LifeTime

TMP 전용 폰트 만들기
MeshPro는 한글이 깨지는 현상 발생
-> 전용 폰트 설정
Window - TextMeshPro_Font_Asset_Creator


25.02.06
Unity6 Basic 
People & Job --> 해외 직무 리크루팅 사이트
데이터 다루기 연습
데이터의 영구 저장 방법 고려
PlayerPrefs : 플레이어 환경 설정 저장할 때 사용되는 클래스
/// 1. DeleteAll()
/// 2. DeleteKey(KeyName)
/// 3. Get(Key)
/// 4. set(Key, Value)// if value is already saved :: change Value
/// 5. HasKey(Key) :: 키가 존재하는지 여부

// 클래스 기초
객체 : Unit unit; 선언 되어있는 상태 -> 이런거 있다. 
인스턴스 : Unit unit = new Unit();  -> 생성자 호출로 인한 생성상태 : 여러개의 인스턴스가 가능
레퍼런스 : 객체 메모리 주소 접근값

// json 사용시 주의점 

-> C# 스크립트에서는 ReadAllText메서드를 통해 파일을 읽어올 경우 주석문까지 모두 읽어옴 
--> 추가 예외 처리를 하지 않는다면 클래스 인스턴스로 생성할 수 없다 
---> 엄격하게 포매팅 해야 사용가능


25.02.07
Unity6 Basic

#1 Lecture
Sound & Media / Recorde

Audio Source : AudioClip Playing tool

Audio Listener / Audio Mixer : 실제로 재생시키는 주체

Component Properties
Bypass  Effects : 오디오 소스에 적용된 필터 효과를 분리
        Listener Effect : 리스너를 끄거나 켜기
        Reverb Zones : 리버브 존 을 끄거나 켜기 :: 도플러 효과 연출 // 잔향 효과

Priority : 오디오 우선순위 0 ~ 256 (Min Value first)
Volume : 리스너 기준 사운드 크기
pitch : 재생 속도 배율
spatial Pan : 스테레오 모드 출력 조절기 : 0(default) -1(left Only) 1(Right Only)
        Blend : 리스너와 스피커의 거리에 따른 소리 재생

Reverb Zone mix : 리버브 존에 대한 출력신호 양을 조절
                0 : 영향 x
                1 : default(오디오 소스와 리버브 존 사이의 신호를 최대치)
                1.1 : 10db 증폭 
                동굴 속 소리 반사, 을림효과 등 설정

3D Sound Settings
    Doppler Level : 거리에 따른 사운드 높낮이 표현
    Spread : 사운드가 퍼지는 각도 (0 ~ 360)

    Rolloff Mode : 그래프 설정


#2 Lecture
README.md 일반적인 작성 방법
Heading Tag (H1 = #)
# H1

``` (css)
(Lnaguage :: Source Code) inspecter
```

**내용** (강조)

취소선 사용가능

issue -> img resource URI insert

+/-/* (List)

*1
    *2
        *3

|제목|내용|설명| (표)
|:   |  :|:  :| (왼, 우, 중앙 정렬)

#3 Lecture
Scene name : AfterLunch.Unity
Audio + UI + Mixer
음파장 시각화 

Scene name : SampleScene3
오디오 믹서 만들기
create -> Audio -> AudioMixer
inspecter -> Attenuation -> Expose (스크립트를 통한 통제)