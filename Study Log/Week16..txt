25.05.05
어린이날 연휴 휴강


25.05.06
대체 공휴일 휴강


25.05.07
NetWork Basic
#1 Lecture
Review 
객체의 상태를 전달하는 것 - Replication
직렬화 - 한번에 보낼 수 있는 데이터의 양은 한정되어 있으니 
파편화 해서 보내되 어떻게 해석해야 하는지에 대한 

192.168.254.3 / 20
1111 1111 / 1111 1111 / 1111 0000 / 0000 0000

1100 0000 / 1010 1000 / 1111 
                             1110 / 0000 0011
NetWork Addr = 1100 0000 / 1010 1000 / 1111 0000 / 0000 0000 = 192.168.240.0
BroadCastID = 1100 0000 / 1010 1000 / 1111 1111 / 1111 1111 = 192.168.255.255


IP 


#2 Lecture
HTTP :: Protocol
비연결성    -   응답 후 연결을 해제함
                -   서버의 자원을 효율적으로 사용할 수 있게함
                -   웹 문서의 경우 클라이언트의 입력이 존재하지 않는다면 정적인 페이지 이기 때문에 연결을 유지할 필요가 없음

        -> 지속 연결 : 일단 한번 연결하면 어느정도는 연결을 유지함

무상태 - 서버는 누구와 통신하는지 모름 상태를 저장하지 않음
        -> 누구든 요청만 하면 요청을 들어주기만 하면 된다 (Scale UP)
            - 클라이언트는 누가 요청했는지에 대한 정보를 항상 추가로 전달해줘야 한다.
            -> 경량 데이터를 추가로 전달한다 (Cookie, Token)


25.05.08
NetWork Basic
#1 Lecture
Cisco PacketTracer 
Network Topology Example

DHCP Header
ip addr 0.0.0.0 = Wildcard ip
==> 아직 할당된게 없으니 모두 0

Dest Addr => 255.255.255.255 = broadcast All
==> DHCP 서버 어딧는지도 모르니까 찾아내야 한다
-> 나와 연결된 모든 네트워크에 브로드캐스트 던져본다

네트워크 주소 찾는법
 
내 ip와 연결된 네트워크 ID + Host를 &&연산 한다
-> 네트워크 주소의 호스트 ID는 항상 모든 비트가 0이니까 쉽게 찾을 수 있다.


#2 Lecture
Unity6 Netcode
조건부 컴파일
-> 실제 빌드시에는 제외 할 수 이씀
Conditional Attributer


SINGLETON
:: 
객체 지향 언어에서는 원칙적으로 전역 변수를 사용하지 못하도록 막고 있다
--> 근데 전역적으로 관리를 해줄 뭔가가 필요한데?
전역적으로 사용할 클래스를 하나 만들어두고 사용하자!


25.05.09
NetWork Basic
#1 Lecture
Review

ifDev_
{
        
}
EndIF

